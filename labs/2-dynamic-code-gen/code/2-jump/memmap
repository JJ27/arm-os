/* you should modify this linker script  */
SECTIONS
{
    /*
     * cs107e uses this:
     *      .text 0x8000 :  { start.o(.text*)  *(.text*) } 
     * which makes linking in start.o awkward if you don't copy it into
     * each dir.
     *
     * XXX: I cannot make text.boot work if we link start into libpi.a 
     */
    LINK_ADDR = 0x8000;
    .crt0_header LINK_ADDR : {
        LONG(0xea00000c);

        __hello_world_string = .;
        LONG(0x6C6C6568);
        LONG(0x0000006F);
    
        /* magic cookie for sanity checking */
        LONG(0x12345678);
        /* 
         * the second word is the size of the header.  this lets us avoid changing
         * a bunch of code as we add fields.  You should copy the entire header
         * and just jump over it.
         */
        LONG(SIZEOF(.crt0_header));

        /* Where we are linked at */
        LONG(LINK_ADDR);
        /* 
         * total size of the binary file in bytes not including the header.
         * NOTE: bss data is *not* in the .bin: it contains only zeros so we
         * do not need to record them, just its size.
         */
        LONG(SIZEOF(.text) + SIZEOF(.data) + SIZEOF(.rodata) );        
        /* can add stuff below and loader should still work */
        LONG(0x00000000);
        LONG(0x00000000);
        LONG(0x00000000);
        LONG(0x00000000);
        LONG(0x00000000);
        LONG(0x00000000);
        LONG(0x00000000);
        LONG(0x00000000);
        LONG(0x00000000);
    }
    .text :  { KEEP(*(.text.boot))  *(.text*) }
    .data : { *(.data*) } 
    .rodata : { *(.rodata*) }
    .bss : {
        __bss_start__ = .;
        *(.bss*)
        *(COMMON)
        . = ALIGN(8);
        __bss_end__ = .;
        . = ALIGN(8);
        __heap_start__ = .;
    }
}

